# Copied from jackyzha0/quartz's ci.yaml
name: Build vault

env:
  TZ: Asia/Shanghai

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
    paths:
      - '.gitmodules'
      - 'learn2live/**'
  # receive event of submodule update
  repository_dispatch:
    types: [submodule_updated]
  workflow_dispatch:

jobs:
  build-and-deploy:
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
      pages: write
      id-token: write

    # Seems like it will generate a protection rule for branch master.
    # environment:
    #   name: github-pages
    #   url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
          token: ${{ secrets.VAULT_PAT }}
          submodules: 'recursive'

      - name: Update submodule to latest
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git submodule foreach --recursive 'git checkout master || git checkout main'
          git submodule update --remote --merge
          git add .
          git commit -m "chore: sync submodules to HEAD" || exit 0
          git push

      - name: Setup Node
        uses: actions/setup-node@v5
        with:
          node-version: 22

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - run: npm ci

      # - name: Check types and style
      #   run: npm run check

      # - name: Test
      #   run: npm test

      - name: Ensure Quartz builds, check bundle info
        run: npx quartz build --bundleInfo -d learn2live --concurrency 16

      - name: Setup GitHub Pages
        uses: actions/configure-pages@v4

      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public
          retention-days: 1

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  publish-to-branch:
    needs: build-and-deploy
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write

    steps:
      - name: Deploy to pub
        uses: peaceiris/actions-gh-pages@v2
        env:
          PERSONAL_TOKEN: ${{ secrets.VAULT_PAT }}
          PUBLISH_BRANCH: pub
          PUBLISH_DIR: ./public


  publish-tag:
    if: ${{ github.repository == 'jackyzha0/quartz' && github.ref == 'refs/heads/v4' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Setup Node
        uses: actions/setup-node@v5
        with:
          node-version: 22
      - name: Get package version
        run: node -p -e '`PACKAGE_VERSION=${require("./package.json").version}`' >> $GITHUB_ENV
      - name: Create release tag
        uses: pkgdeps/git-tag-action@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          github_repo: ${{ github.repository }}
          version: ${{ env.PACKAGE_VERSION }}
          git_commit_sha: ${{ github.sha }}
          git_tag_prefix: "v"
